stages:
  - build
  - test
  - publish

include:
  # DOCS: https://gitlab.internal.sanger.ac.uk/team113sanger/common/cicd-template/-/blob/develop/README.md
  - project: "team113sanger/common/cicd-template"
    ref: 0.3.4
    file: ".gitlab-ci-components.yml"

#############
# TEMPLATES #
#############

.generic-wo-script-or-rules:
  extends:
    - .component-variables
    - .component-before_script
    - .component-after_script
    - .component-tags-shared-large-runner



.dev-variables:
  variables:
    USE_DOCKER_TARGET_STAGE: 1
    DOCKER_TARGET_STAGE: base_stage
    # We need to set this to 1 to enable BuildKit as the Dockerfile uses BuildKit features to speed up the build
    DOCKER_BUILDKIT: 1
    PRE_FETCH_BASE_IMAGE: rocker/r-ver:4.4.0
    # Incase 'docker compose' build is ever used we want to ensure the image
    # does not have sudo. By default CICD jobs do not build with 'docker
    # compose' but use 'docker' - so this is just a safety measure.
    HAS_SUDO: 0
    DOCKERFILE_PATH: Dockerfile-dev
    IMAGE_TAG_SUFFIX: "-dev"

.public-variables:
  extends:
    - .dev-variables
  variables:
    DOCKERFILE_PATH: Dockerfile
    IMAGE_TAG_SUFFIX: "-public"


############
#   JOBS   #
############

build-dev:
  stage: build
  extends:
    - .generic-wo-script-or-rules
    - .dev-variables
    - .component-script_docker-build
    - .component-rules-except-release

build-public:
  stage: build
  extends:
    - .generic-wo-script-or-rules
    - .public-variables
    - .component-script_docker-build
    - .component-rules-except-release

unit-test:
  stage: test
  extends:
    - .generic-wo-script-or-rules
    - .dev-variables
    - .component-rules-except-release
  script:
    - echo "*** [SCRIPT] START ***"
    - echo "I am a script - I run the R unit tests in a docker container"
    - echo "Unit test against CANDIDATE_IMAGE='${CANDIDATE_IMAGE:?not-set-in-before_script}'"
    - docker pull "${CANDIDATE_IMAGE}"
    # Test image against unit tests
    - docker run --rm -t "${CANDIDATE_IMAGE}" Rscript -e "devtools::test(reporter = c('progress', 'fail'))"
    - echo "*** [SCRIPT] END ***"

format-test:
  stage: test
  extends:
    - .generic-wo-script-or-rules
    - .dev-variables
    - .component-script-test-formatting-in-docker
    - .component-rules-except-release

publish-develop:
  stage: publish
  extends:
    - .generic-wo-script-or-rules
    - .dev-variables
    - .component-script-publish-develop-docker-image
    - .component-rules-develop-only

publish-tagged_and_latest_docker_images:
  stage: publish
  extends:
    - .generic-wo-script-or-rules
    - .dev-variables
    - .component-script-publish-tagged+latest-docker-image
    - .component-rules-tag-only
